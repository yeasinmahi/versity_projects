#include<stdio.h>
#include<gl\glut.h>

void init(void)
{
GLfloat mat_specular0[] = { 1.0, 1.0, 1.0, 1.0 };
GLfloat mat_shininess0[] = { 50.0 };

GLfloat light_position0[] = { 1.0, 0.0, 0.0, 0.0 };
GLfloat white_light0[] = { 1.0, 0.0, 0.0, 1.0 };
GLfloat lmodel_ambient[] = { 0.5, 0.5, 0.5, 1.0 };

GLfloat light_position1[] = { 0.0, 1.0, 0.0, 0.0 };
GLfloat white_light1[] = { 0.0, 1.0, 0.0, 1.0 };

GLfloat light_position2[] = { 0.0, 0.0, 1.0, 0.0 };
GLfloat white_light2[] = { 0.0, 0.0, 1.0, 1.0 };

glClearColor(0.0, 0.0, 0.0, 0.0);
glShadeModel(GL_SMOOTH);
glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular0);
glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess0);

glLightfv(GL_LIGHT0, GL_POSITION, light_position0);
glLightfv(GL_LIGHT0, GL_DIFFUSE, white_light0);
glLightfv(GL_LIGHT0, GL_SPECULAR, white_light0);
glLightModelfv(GL_LIGHT_MODEL_AMBIENT, lmodel_ambient);

glLightfv(GL_LIGHT1, GL_POSITION, light_position1);
glLightfv(GL_LIGHT1, GL_DIFFUSE, white_light1);
glLightfv(GL_LIGHT1, GL_SPECULAR, white_light1);
glLightModelfv(GL_LIGHT_MODEL_AMBIENT, lmodel_ambient);

glLightfv(GL_LIGHT2, GL_POSITION, light_position2);
glLightfv(GL_LIGHT2, GL_DIFFUSE, white_light2);
glLightfv(GL_LIGHT2, GL_SPECULAR, white_light2);
glLightModelfv(GL_LIGHT_MODEL_AMBIENT, lmodel_ambient);

glEnable(GL_LIGHTING);
glEnable(GL_LIGHT0);
glEnable(GL_LIGHT1);
glEnable(GL_LIGHT2);
glEnable(GL_DEPTH_TEST);
}
void display(void)
{
glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glutSolidSphere(0.8, 1000, 200);
glFlush();
}
void reshape(int w, int h)
{
glViewport(0, 0, (GLsizei) w, (GLsizei) h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
if (w <= h)
glOrtho(-1.5, 1.5, -1.5*(GLfloat)h/(GLfloat)w,
1.5*(GLfloat)h/(GLfloat)w, -10.0, 10.0);
else
glOrtho(-1.5*(GLfloat)w/(GLfloat)h,
1.5*(GLfloat)w/(GLfloat)h, -1.5, 1.5, -10.0, 10.0);
glMatrixMode(GL_MODELVIEW);
glLoadIdentity();
}
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition(150,100);
    glutInitWindowSize(700, 600);
    glutCreateWindow("Lab 9__Lighting");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;

}
